/**
  grid.less v.2012040201
  hacked together by Nuey San Waldman ( @nuey | nswaldman@gmail.com )

  Life's too short to deal with grid calculators when you have Less.

*/

// Global variables for grids. Not using 960gs? Then modify your structure here!
// @grid-gutter: 20px;
// @grid-column: 60px;
// @grid-count:  12;

// Grid math
@grid-val: 1;
@grid-width:  ( @grid-gutter + @grid-column ) * @grid-count;
@grid-fixed:  ( @grid-gutter + @grid-column ) * @grid-count - @grid-gutter;
@grid-block:  @grid-width * (@grid-val/@grid-count);

.blank {
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
}

.clear {
    clear: both;
    .blank;
}

.container {
    // This calculation is a personal preference.
    // Use grid.960gs.less and you'll get the usual width, no worries.
    width: @grid-fixed;
}

.row {

    // Eliminates superfluous .grid(12) clutter in layouts, possibly not everybody's cup of tea.
    // Using grid.960gs.less? You won't have to define rows.
    margin: 0 -(@grid-gutter/2);

    &> h2 {
        margin-left: (@grid-gutter/2);
    }

    &:after,
    &:before {
      content: '.';
      font-size: 0;
      line-height: 0;
      .blank;
    }

    &:after {
        clear: both;
    }

    //  The following zoom:1 rule is specifically for IE6 + IE7.
    //  Move to separate stylesheet if invalid CSS is a problem.

    zoom: 1;
}

.column {
    width: @grid-width;
}

.grid-helper {
    display: inline;
    float: left;
    margin-left: (@grid-gutter/2);
    margin-right: (@grid-gutter/2);
    zoom: 1;
}

.grid(@grid-val:1) {
    .grid-helper;
    width: @grid-block - @grid-gutter;
}

.pull(@grid-val:1) {
    position: relative;
    padding-right: @grid-block;
}

.push(@grid-val:1) {
    position: relative;
    padding-left: @grid-block;
}

.prefix(@grid-val:1) {
    margin-left: @grid-block;
}

.suffix(@grid-val:1) {
    margin-right: @grid-block;
}

